# obliczanie sredniej
#srednia wzgledem marki (grupowanie)
vprices <- c()
vcounter <- c()
price <- cars$Price[1]
counter <- 0
for (i in 2:length(cars$Price))
if (cars$Manufacturer[i-1]==cars$Manufacturer[i]){
price <- price + cars$Price[i]
counter <- counter + 1
if(i==length(cars$Price)){
price <- price + cars$Price[i]
counter <- counter + 1
vprices <- append(vprices, price)
vcounter <- append(vcounter, counter)
}
}else{
price <- price + cars$Price[i]
counter <- counter + 1
vprices <- append(vprices, price)
vcounter <- append(vcounter, counter)
counter <- 0
price <- 0
}
#srednie
avg_by_manu <- vprices/vcounter
```
#### Wykres słupkowy średnich
```{r, echo = F}
barplot(avg_by_manu, col = rainbow(35), names.arg=unique(cars$Manufacturer), las=2)
```
#### Odchylenie standardowe średnich względem marek
```{r}
# odchylenie
stand_dev <- sd(avg_by_manu)
```
```{r, echo = F}
stand_dev
```
#### Dominanta dla rozmiarów silników
```{r}
# dominanta
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(cars$Engine_size)
```
#### Kwantyle wśród rozmiarów silników
```{r}
# kwantyle
kwantyle <- quantile(cars$Engine_size)
```
```{r, echo = F}
kwantyle
```
#### Korelacja między wielkością silnika, a jego mocą
```{r}
#korelacja
plot(cars$Engine_size, cars$Horsepower)
```
```{r, echo = F}
cor(cars$Engine_size, cars$Horsepower,  method = "pearson", use = "complete.obs")
```
#### Rozkład wartości mocy silnika
```{r}
#rozklad
rozklad_hp <- plot(density(cars$Horsepower))
```
> Współczynnik zmienności
```{r}
#wspolczynnik zmiennosci
cv <- sd(cars$Horsepower)/mean(cars$Horsepower)
```
```{r, echo = F}
cv
```
> Współczynnik asymetrii
```{r}
as <- 3*(mean(cars$Horsepower)-median(cars$Horsepower))/sd(cars$Horsepower)
```
```{r, echo = F}
as
```
> Współczynnik splaszczenia
```{r}
kurtoza <- moment(cars$Horsepower, order=4, center=TRUE)/(sd(cars$Horsepower)^3)
```
```{r, echo = F}
kurtoza
```
#### Wykres pudełkowy efektywności spalania
```{r, eval=FALSE, warning=FALSE}
#wykres pudełkowy
pudelkowy <- cars %>%
ggplot( aes(x=cars$Vehicle_type, y=cars$Fuel_efficiency, fill=cars$Vehicle_type)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Wykres pudełkowy efektywności spalania") +
xlab("")
```
```{r, echo=FALSE, warning=FALSE}
#wykres pudełkowy
pudelkowy <- cars %>%
ggplot( aes(x=cars$Vehicle_type, y=cars$Fuel_efficiency, fill=cars$Vehicle_type)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Wykres pudełkowy efektywności spalania") +
xlab("")
```
```{r, echo=FALSE}
pudelkowy
```
### Wnioski
Mimo podobieństwa zadań, każde z nich wyróżniało się inną formą przedstawienia danych. Jeśli sposób wyliczenia danej charakterystyki statystycznej w kilku zadaniach był taki sam, to starałam się zrobić to w różny sposób, jak np:. liczenie kwantyli różnymi metodami. Zadanie bardzo ciekawe, zarówno utrwalające wiedzę teoretyczną, jak i udoskonalające umiejętności praktyczne.
---
title: "Statystyczn analiza danych  - projekt"
author: "Aldona Swirad"
date: "`r Sys.Date()`"
output:
html_document:
theme: readable
fig_width: 9
highlight: kate
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
<style>
h4 {
margin-top:2.5em
}
h4.author, h4.date  {
margin-top:0em
}
</style>
# Rynek samochodowy
### Wstęp
#### Źródło
Dane pochodzą z ogólnodostępnej platformy Kaggle.
https://www.kaggle.com/datasets/gagandeep16/car-sales
#### Opis danych
Wybrane dane dotyczą samochodów. Możemy tam znaleźć informacje na temat ich poszczególnyhc cech, takich jak:
* Manufacturer - Marka
* Model - model
* Sales_in_thousands - sprzedaż w tysiącach
- __year_resale_value - roczna wartość odsprzedaży
- Vehicle_type - rodzaj
- Price_in_thousands - cena w tysiącach
- Engine_size - pojemność silnika
- Horsepower - liczba koni mechanicznych
- Wheelbase - rozstaw osi
- Width - szerokokść
- Length - długość
- Curb_weight - masa wlasna pojazdu
- Fuel_capacity - pojemnosc baku
- Fuel_efficiency - efektywnosc spalania
Chciałam wybrać temat, który mnie zainteresuje i pozwoli na zdobycie praktycznych umiejętności w analizie danych. Ze względu na moje osobiste zainteresowania oraz wymagania akademickie, analiza danych na temat samochodów wydała mi się interesującym wyborem. Jestem ciekawa zależności między różnymi parametrami samochodów, takimi jak moc silnika, czy cena oraz jakie wnioski można wyciągnąć na podstawie analizy statystycznej takich danych. Ponadto, widzę praktyczne zastosowanie takiej analizy w przemyśle motoryzacyjnym, co również mnie zainteresowało i skłoniło do wyboru tego tematu do mojego projektu.
#### Wczytanie danych i ich obróbka
```{r, warning=FALSE}
# użyte biblioteki
library(e1071)
library(tidyverse)
library(hrbrthemes)
library(viridis)
## wczytywanie danych
setwd('D:/IiAD sem_4/Statystyka/Projekt_SAD')
cars <- read.csv('Car_sales.csv', header = T, sep = ',')
cars <- na.omit(cars)
colnames(cars)[3] <- "Sales"
colnames(cars)[6] <- "Price"
cars$Sales <- cars$Sales*1000
cars$Price <- cars$Price*1000
cars <- cars[, -c(15,16)]
```
#### Charakterystyki liczbowe
##### Srednia wzgledem marki
```{r}
# obliczanie sredniej
#srednia wzgledem marki (grupowanie)
vprices <- c()
vcounter <- c()
price <- cars$Price[1]
counter <- 0
for (i in 2:length(cars$Price))
if (cars$Manufacturer[i-1]==cars$Manufacturer[i]){
price <- price + cars$Price[i]
counter <- counter + 1
if(i==length(cars$Price)){
price <- price + cars$Price[i]
counter <- counter + 1
vprices <- append(vprices, price)
vcounter <- append(vcounter, counter)
}
}else{
price <- price + cars$Price[i]
counter <- counter + 1
vprices <- append(vprices, price)
vcounter <- append(vcounter, counter)
counter <- 0
price <- 0
}
#srednie
avg_by_manu <- vprices/vcounter
```
#### Wykres słupkowy średnich
```{r, echo = F}
barplot(avg_by_manu, col = rainbow(35), names.arg=unique(cars$Manufacturer), las=2)
```
#### Odchylenie standardowe średnich względem marek
```{r}
# odchylenie
stand_dev <- sd(avg_by_manu)
```
```{r, echo = F}
stand_dev
```
#### Dominanta dla rozmiarów silników
```{r}
# dominanta
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(cars$Engine_size)
```
#### Kwantyle wśród rozmiarów silników
```{r}
# kwantyle
kwantyle <- quantile(cars$Engine_size)
```
```{r, echo = F}
kwantyle
```
#### Korelacja między wielkością silnika, a jego mocą
```{r}
#korelacja
plot(cars$Engine_size, cars$Horsepower)
```
```{r, echo = F}
cor(cars$Engine_size, cars$Horsepower,  method = "pearson", use = "complete.obs")
```
#### Rozkład wartości mocy silnika
```{r}
#rozklad
rozklad_hp <- plot(density(cars$Horsepower))
```
> Współczynnik zmienności
```{r}
#wspolczynnik zmiennosci
cv <- sd(cars$Horsepower)/mean(cars$Horsepower)
```
```{r, echo = F}
cv
```
> Współczynnik asymetrii
```{r}
as <- 3*(mean(cars$Horsepower)-median(cars$Horsepower))/sd(cars$Horsepower)
```
```{r, echo = F}
as
```
> Współczynnik splaszczenia
```{r}
kurtoza <- moment(cars$Horsepower, order=4, center=TRUE)/(sd(cars$Horsepower)^3)
```
```{r, echo = F}
kurtoza
```
#### Wykres pudełkowy efektywności spalania
```{r, warning=FALSE}
windowsFonts(Times=windowsFont("TT Times New Roman"))
#wykres pudełkowy
pudelkowy <- cars %>%
ggplot( aes(x=cars$Vehicle_type, y=cars$Fuel_efficiency, fill=cars$Vehicle_type)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Wykres pudełkowy efektywności spalania") +
xlab("")
```
```{r, echo=FALSE}
pudelkowy
```
### Wnioski
Mimo podobieństwa zadań, każde z nich wyróżniało się inną formą przedstawienia danych. Jeśli sposób wyliczenia danej charakterystyki statystycznej w kilku zadaniach był taki sam, to starałam się zrobić to w różny sposób, jak np:. liczenie kwantyli różnymi metodami. Zadanie bardzo ciekawe, zarówno utrwalające wiedzę teoretyczną, jak i udoskonalające umiejętności praktyczne.
install.packages("extrafont")
library(extrafont)
---
title: "Statystyczn analiza danych  - projekt"
author: "Aldona Swirad"
date: "`r Sys.Date()`"
output:
html_document:
theme: readable
fig_width: 9
highlight: kate
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
<style>
h4 {
margin-top:2.5em
}
h4.author, h4.date  {
margin-top:0em
}
</style>
# Rynek samochodowy
### Wstęp
#### Źródło
Dane pochodzą z ogólnodostępnej platformy Kaggle.
https://www.kaggle.com/datasets/gagandeep16/car-sales
#### Opis danych
Wybrane dane dotyczą samochodów. Możemy tam znaleźć informacje na temat ich poszczególnyhc cech, takich jak:
* Manufacturer - Marka
* Model - model
* Sales_in_thousands - sprzedaż w tysiącach
- __year_resale_value - roczna wartość odsprzedaży
- Vehicle_type - rodzaj
- Price_in_thousands - cena w tysiącach
- Engine_size - pojemność silnika
- Horsepower - liczba koni mechanicznych
- Wheelbase - rozstaw osi
- Width - szerokokść
- Length - długość
- Curb_weight - masa wlasna pojazdu
- Fuel_capacity - pojemnosc baku
- Fuel_efficiency - efektywnosc spalania
Chciałam wybrać temat, który mnie zainteresuje i pozwoli na zdobycie praktycznych umiejętności w analizie danych. Ze względu na moje osobiste zainteresowania oraz wymagania akademickie, analiza danych na temat samochodów wydała mi się interesującym wyborem. Jestem ciekawa zależności między różnymi parametrami samochodów, takimi jak moc silnika, czy cena oraz jakie wnioski można wyciągnąć na podstawie analizy statystycznej takich danych. Ponadto, widzę praktyczne zastosowanie takiej analizy w przemyśle motoryzacyjnym, co również mnie zainteresowało i skłoniło do wyboru tego tematu do mojego projektu.
#### Wczytanie danych i ich obróbka
```{r, warning=FALSE}
# użyte biblioteki
library(e1071)
library(tidyverse)
library(hrbrthemes)
library(viridis)
## wczytywanie danych
setwd('D:/IiAD sem_4/Statystyka/Projekt_SAD')
cars <- read.csv('Car_sales.csv', header = T, sep = ',')
cars <- na.omit(cars)
colnames(cars)[3] <- "Sales"
colnames(cars)[6] <- "Price"
cars$Sales <- cars$Sales*1000
cars$Price <- cars$Price*1000
cars <- cars[, -c(15,16)]
```
#### Charakterystyki liczbowe
##### Srednia wzgledem marki
```{r}
# obliczanie sredniej
#srednia wzgledem marki (grupowanie)
vprices <- c()
vcounter <- c()
price <- cars$Price[1]
counter <- 0
for (i in 2:length(cars$Price))
if (cars$Manufacturer[i-1]==cars$Manufacturer[i]){
price <- price + cars$Price[i]
counter <- counter + 1
if(i==length(cars$Price)){
price <- price + cars$Price[i]
counter <- counter + 1
vprices <- append(vprices, price)
vcounter <- append(vcounter, counter)
}
}else{
price <- price + cars$Price[i]
counter <- counter + 1
vprices <- append(vprices, price)
vcounter <- append(vcounter, counter)
counter <- 0
price <- 0
}
#srednie
avg_by_manu <- vprices/vcounter
```
#### Wykres słupkowy średnich
```{r, echo = F}
barplot(avg_by_manu, col = rainbow(35), names.arg=unique(cars$Manufacturer), las=2)
```
#### Odchylenie standardowe średnich względem marek
```{r}
# odchylenie
stand_dev <- sd(avg_by_manu)
```
```{r, echo = F}
stand_dev
```
#### Dominanta dla rozmiarów silników
```{r}
# dominanta
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(cars$Engine_size)
```
#### Kwantyle wśród rozmiarów silników
```{r}
# kwantyle
kwantyle <- quantile(cars$Engine_size)
```
```{r, echo = F}
kwantyle
```
#### Korelacja między wielkością silnika, a jego mocą
```{r}
#korelacja
plot(cars$Engine_size, cars$Horsepower)
```
```{r, echo = F}
cor(cars$Engine_size, cars$Horsepower,  method = "pearson", use = "complete.obs")
```
#### Rozkład wartości mocy silnika
```{r}
#rozklad
rozklad_hp <- plot(density(cars$Horsepower))
```
> Współczynnik zmienności
```{r}
#wspolczynnik zmiennosci
cv <- sd(cars$Horsepower)/mean(cars$Horsepower)
```
```{r, echo = F}
cv
```
> Współczynnik asymetrii
```{r}
as <- 3*(mean(cars$Horsepower)-median(cars$Horsepower))/sd(cars$Horsepower)
```
```{r, echo = F}
as
```
> Współczynnik splaszczenia
```{r}
kurtoza <- moment(cars$Horsepower, order=4, center=TRUE)/(sd(cars$Horsepower)^3)
```
```{r, echo = F}
kurtoza
```
#### Wykres pudełkowy efektywności spalania
```{r, warning=FALSE, message=FALSE}
#wykres pudełkowy
pudelkowy <- cars %>%
ggplot( aes(x=cars$Vehicle_type, y=cars$Fuel_efficiency, fill=cars$Vehicle_type)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Wykres pudełkowy efektywności spalania") +
xlab("")
```
```{r, echo=FALSE}
pudelkowy
```
### Wnioski
Mimo podobieństwa zadań, każde z nich wyróżniało się inną formą przedstawienia danych. Jeśli sposób wyliczenia danej charakterystyki statystycznej w kilku zadaniach był taki sam, to starałam się zrobić to w różny sposób, jak np:. liczenie kwantyli różnymi metodami. Zadanie bardzo ciekawe, zarówno utrwalające wiedzę teoretyczną, jak i udoskonalające umiejętności praktyczne.
ggplot(cars, aes(x=as.factor(cars$Engine_size), y=cars$Fuel_efficiency)) +
geom_boxplot(fill="slateblue", alpha=0.2) +
xlab("Fuel_efficiency")
ggplot(cars, aes(x=as.factor(cars$Vehicle_type), y=cars$Fuel_efficiency)) +
geom_boxplot(fill="slateblue", alpha=0.2) +
xlab("Fuel_efficiency")
t.test(cars$Fuel_efficiency, mu=22, alternalive="less", conf.level = 0.75)
t.test(cars$Fuel_efficiency, mu=22, alternalive="less", conf.level = 0.1)
t.test(cars$Fuel_efficiency, mu=22, alternalive="less", conf.level = 0.1)
t.test(cars$Fuel_efficiency, mu=22, alternalive="less", conf.level = 0.1)
t.test(cars$Engine_size, mu=22, alternalive="less", conf.level = 0.1)
mean(cars$Engine_size)
t.test(cars$Sales, mu=22000, alternalive="less", conf.level = 0.1)
t.test(cars$Sales, mu=60000, alternalive="less", conf.level = 0.1)
t.test(cars$Sales, mu=60000, alternalive="less", conf.level = 0.01)
t.test(cars$Sales, mu=60000, alternalive="less", conf.level = 0.1)
shapiro.test(cars$Sales)
shapiro.test(cars$Horsepower)
shapiro.test(cars$Sales)
ks.test(cars$Sales,'pnorm',51,37)
ks.test(cars$Sales,'pnorm',0,1)
ks.test(cars$Sales,'punif',0,1)
ks.test(cars$Sales,'punif',0,100)
ks.test(cars$Sales,'punif',100,100)
ks.test(cars$Sales,'punif',100,1)
ks.test(cars$Sales,'punif',100,10)
ks.test(cars$Sales,'punif',100,100)
ks.test(cars$Engine_size,cars$Horsepower)
ks.test(cars$Engine_size,cars$Horsepower)
ks.test(cars$Width,cars$Length)
$Engine_size
ks.test(cars$Engine_size,cars$Horsepower)
